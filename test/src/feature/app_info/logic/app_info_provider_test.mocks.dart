// Mocks generated by Mockito 5.3.0 from annotations
// in entime/test/src/feature/app_info/logic/app_info_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:device_info_plus_platform_interface/model/android_device_info.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAndroidBuildVersion_0 extends _i1.SmartFake
    implements _i2.AndroidBuildVersion {
  _FakeAndroidBuildVersion_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [AndroidDeviceInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAndroidDeviceInfo extends _i1.Mock implements _i2.AndroidDeviceInfo {
  MockAndroidDeviceInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AndroidBuildVersion get version =>
      (super.noSuchMethod(Invocation.getter(#version),
              returnValue:
                  _FakeAndroidBuildVersion_0(this, Invocation.getter(#version)))
          as _i2.AndroidBuildVersion);
  @override
  List<String?> get supported32BitAbis =>
      (super.noSuchMethod(Invocation.getter(#supported32BitAbis),
          returnValue: <String?>[]) as List<String?>);
  @override
  List<String?> get supported64BitAbis =>
      (super.noSuchMethod(Invocation.getter(#supported64BitAbis),
          returnValue: <String?>[]) as List<String?>);
  @override
  List<String?> get supportedAbis =>
      (super.noSuchMethod(Invocation.getter(#supportedAbis),
          returnValue: <String?>[]) as List<String?>);
  @override
  List<String?> get systemFeatures =>
      (super.noSuchMethod(Invocation.getter(#systemFeatures),
          returnValue: <String?>[]) as List<String?>);
  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(Invocation.method(#toMap, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
