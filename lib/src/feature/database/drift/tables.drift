CREATE TABLE races (
	id integer PRIMARY KEY AUTOINCREMENT,
	name text NOT NULL,
	start_date text,
	finish_date text,
	location text,
	is_deleted BOOLEAN NOT NULL DEFAULT false
) AS Race;

CREATE TABLE stages (
	id integer PRIMARY KEY AUTOINCREMENT,
	trail_id integer,
	race_id integer NOT NULL,
	name text NOT NULL,
	is_active BOOLEAN NOT NULL DEFAULT true,
	is_deleted BOOLEAN NOT NULL DEFAULT false,
    FOREIGN KEY (trail_id) REFERENCES trails(id),
    FOREIGN KEY (race_id) REFERENCES races(id)
);

CREATE TABLE riders (
	id integer PRIMARY KEY AUTOINCREMENT,
	name text NOT NULL,
	nickname text,
	birthday integer,
	team text,
	city text,
	email text,
	phone text,
	comment text
);

CREATE TABLE statuses (
	id integer PRIMARY KEY AUTOINCREMENT,
	type text NOT NULL
) AS Status;

CREATE TABLE participants (
	id integer PRIMARY KEY AUTOINCREMENT,
	race_id integer NOT NULL,
	rider_id integer NOT NULL,
	number integer NOT NULL,
	category text,
	rfid text,
	status_id integer NOT NULL DEFAULT 1,
    FOREIGN KEY (rider_id) REFERENCES riders(id),
    FOREIGN KEY (race_id) REFERENCES races(id)
);

CREATE TABLE starts (
	id integer PRIMARY KEY AUTOINCREMENT,
	stage_id integer NOT NULL,
	participant_id integer NOT NULL,
	start_time text NOT NULL,
	timestamp text,
	automatic_start_time text,
	automatic_correction integer,
	manual_start_time text,
	manual_correction integer,
	status_id integer NOT NULL DEFAULT 1,
    FOREIGN KEY (stage_id) REFERENCES stages(id),
    FOREIGN KEY (participant_id) REFERENCES participants(id)
);

CREATE TABLE finishes (
	id integer PRIMARY KEY AUTOINCREMENT,
	stage_id integer NOT NULL,
	number integer,
	timestamp text,
	finish_time text,
	is_hidden BOOLEAN NOT NULL DEFAULT false,
	is_manual BOOLEAN NOT NULL DEFAULT false,
    FOREIGN KEY (stage_id) REFERENCES stages(id)
) AS Finish;

CREATE TABLE trails (
	id integer PRIMARY KEY AUTOINCREMENT,
	name text NOT NULL,
	distance integer,
	elevation integer,
	gpx_track blob,
	link text,
	comment text
);

selectRaces: SELECT * FROM races WHERE is_deleted = false;
addRace: INSERT INTO races (name, start_date, finish_date) VALUES (:name, :start_date, :finish_date);
deleteRace: UPDATE races SET is_deleted = true WHERE id = :id;
selectStages: SELECT * FROM stages WHERE race_id = :race_id AND is_deleted = false;
addStage: INSERT INTO stages (trail_id, race_id, name) VALUES (:trail_id, :race_id, :name);
deleteStage: UPDATE stages SET is_deleted = true WHERE id = :id;



-- Old protocol
getParticipantsAtStart:
SELECT *
FROM participants, riders, starts
WHERE participants.rider_id = riders.id
  AND starts.participant_id = participants.id
  AND stage_id = :stage_id
  AND starts.status_id = 1
  AND participants.status_id = 1
ORDER BY start_time ASC;

existedStartingParticipants:
SELECT *
FROM starts, participants
WHERE starts.participant_id = participants.id
  AND stage_id = :stage_id
  AND (start_time IS :start_time
    OR (number IS :number
      AND (automatic_start_time NOTNULL OR manual_start_time NOTNULL)));